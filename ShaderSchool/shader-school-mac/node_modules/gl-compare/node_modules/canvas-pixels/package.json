{
  "name": "canvas-pixels",
  "version": "0.0.0",
  "description": "Grab the pixels from a canvas' context, be it 2D or 3D, and return them in an array.",
  "main": "index.js",
  "scripts": {
    "test": "beefy test.js --open"
  },
  "author": {
    "name": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughsk.io/"
  },
  "license": "MIT",
  "devDependencies": {
    "beefy": "^1.1.0",
    "tape": "^2.13.2"
  },
  "dependencies": {},
  "repository": {
    "type": "git",
    "url": "https://github.com/hughsk/canvas-pixels.git"
  },
  "bugs": {
    "url": "https://github.com/hughsk/canvas-pixels/issues"
  },
  "homepage": "https://github.com/hughsk/canvas-pixels",
  "keywords": [
    "canvas",
    "webgl",
    "context",
    "pixel",
    "array",
    "data",
    "color"
  ],
  "readme": "# canvas-pixels [![stable](http://badges.github.io/stability-badges/dist/stable.svg)](http://github.com/badges/stability-badges)\n\nGrab the pixels from a canvas' context, be it 2D or 3D, and return them in\nan array.\n\n## Usage\n\n[![NPM](https://nodei.co/npm/canvas-pixels.png)](https://nodei.co/npm/canvas-pixels/)\n\n### pixels = getPixels(context)\n\nReturns `context`'s pixels in an array â€“ with a 2D context, this will be a\n`Uint8ClampedArray`, and a webgl context will return a `Uint8Array`.\n\n### pixels.get2d(context)\n### pixels.get3d(context)\n\nSame as above, but without the auto-detection.\n\n## License\n\nMIT. See [LICENSE.md](http://github.com/hughsk/canvas-pixels/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "canvas-pixels@0.0.0",
  "_from": "canvas-pixels@0.0.0"
}
