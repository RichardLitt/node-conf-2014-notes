{
  "name": "findup-element",
  "version": "0.0.0",
  "description": "Given a child element, climb up the DOM and find the first parent element matching your criteria",
  "main": "index.js",
  "dependencies": {},
  "devDependencies": {
    "beefy": "^1.1.0",
    "browserify": "^4.1.5",
    "domify": "^1.2.2",
    "multiline": "^0.3.4",
    "tape": "^2.13.1"
  },
  "scripts": {
    "test": "beefy test.js --open"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/findup-element.git"
  },
  "keywords": [
    "traverse",
    "climb",
    "dom",
    "parent",
    "match",
    "element",
    "html"
  ],
  "author": {
    "name": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughsk.io/"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/hughsk/findup-element/issues"
  },
  "homepage": "https://github.com/hughsk/findup-element",
  "readme": "# findup-element [![experimental](http://badges.github.io/stability-badges/dist/experimental.svg)](http://github.com/badges/stability-badges)\n\nGiven a child element, climb up the DOM and find the first parent element\nmatching your criteria.\n\nUseful when dealing with event handlers.\n\n## Usage\n\n[![NPM](https://nodei.co/npm/findup-element.png)](https://nodei.co/npm/findup-element/)\n\n### el = findup(child, filter)\n\nReturns the first element passing the `filter(element)` function. Alternatively,\nyou can pass in an element name as a string or a single `HTMLElement`.\n\n``` javascript\nvar findup = require('findup-element')\n\nvar parent = findup(el, 'div')\nvar parent = findup(el, canvas)\nvar parent = findup(el, function(parent) {\n  return parent.hasAttribute('data-tag')\n})\n```\n\n## License\n\nMIT. See [LICENSE.md](http://github.com/hughsk/findup-element/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "findup-element@0.0.0",
  "_from": "findup-element@0.0.0"
}
