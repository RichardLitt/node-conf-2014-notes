{
  "name": "apprise",
  "version": "1.0.0",
  "description": "A simple browser module for displaying stacking notifications",
  "main": "index.js",
  "license": "MIT",
  "scripts": {
    "start": "beefy example.js:bundle.js --open",
    "bundle": "browserify example.js -o bundle.js"
  },
  "author": {
    "name": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughsk.io/"
  },
  "dependencies": {
    "emitter-component": "^1.1.1",
    "once": "^1.3.0"
  },
  "devDependencies": {
    "beefy": "^2.0.2",
    "browserify": "^4.2.0"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/apprise.git"
  },
  "keywords": [
    "notify",
    "notification",
    "browserify",
    "display",
    "alert"
  ],
  "homepage": "https://github.com/hughsk/apprise",
  "bugs": {
    "url": "https://github.com/hughsk/apprise/issues"
  },
  "readme": "# apprise [![experimental](http://badges.github.io/stability-badges/dist/experimental.svg)](http://github.com/badges/stability-badges)\n\nA simple browser module for displaying stacking notifications.\n\nThis module makes as few assumptions about styling as possible, and simply\nhandles stacking notifications fixed to the screen – you'll even have to remove\nthe elements yourself when they're done. None the less, this should simplify the\nimplementation for you while still providing you plenty of design flexibility.\n\n[![apprise](http://imgur.com/GSKCt0u.png)](http://hughsk.io/apprise)\n\n## Usage\n\n[![NPM](https://nodei.co/npm/apprise.png)](https://nodei.co/npm/apprise/)\n\n### notify = apprise(options)\n\nReturns a `notify` function that you can use to create new notifications.\n\nAccepts the following options:\n\n* `top`: boolean – set to true to align the notifications with the top of the screen.\n* `left`: boolean – set to true to align the notifications with the left of the screen.\n* `bottom`: convenience option – opposite of `top`.\n* `right`: convenience option – opposite of `left`.\n\n### div = notify([timeout])\n\nCreate a new notification. You're handed back a DOM element which will be\nattached to a `fixed` element shared with the other notifications.\n\nOptionally, you can pass a `timeout` value in milliseconds to automatically\nremove the notification.\n\n### notify.on('enter', enter(node, close))\n\nTriggered when a new notification is created. Use this for adding common\ncontent/functionality to notifications.\n\nThe `node` passed to the event is that notification's `<div>` element.\n\n`close` is a function which will trigger the `exit` event on the notification,\nin case you opted not to use a timeout or would like to remove it early.\n\n### notify.on('exit', exit(node))\n\nTriggered when a notification is removed. Use this to remove notifications\nfrom the DOM. The `node` passed to the event is that notification's `<div>`\nelement.\n\n## License\n\nMIT. See [LICENSE.md](http://github.com/hughsk/apprise/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "apprise@1.0.0",
  "_from": "apprise@^1.0.0"
}
