{
  "name": "glslify-live",
  "version": "2.0.3",
  "description": "A browserify transform that transparently enables live reloading of your shaders when using glslify.",
  "main": "transform.js",
  "browser": "browser.js",
  "scripts": {
    "test": "cd test && beefy index.js --open -- -t ../ -t glslify",
    "start": "node server.js"
  },
  "author": {
    "name": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughsk.io/"
  },
  "license": "MIT",
  "browserify": {
    "transform": [
      "envify"
    ]
  },
  "dependencies": {
    "chokidar": "^0.8.2",
    "envify": "^2.0.0",
    "esprima": "^1.2.2",
    "events": "^1.0.1",
    "gl-shader-update": "0.0.0",
    "glsl-resolve": "0.0.1",
    "glslify-bundle": "^1.0.2",
    "once": "^1.3.0",
    "replace-method": "0.0.0",
    "request": "^2.36.0",
    "sleuth": "^0.1.0",
    "sse-stream": "0.0.4",
    "static-eval": "^0.2.3",
    "through": "^2.3.4",
    "uuid": "^1.4.1"
  },
  "devDependencies": {
    "a-big-triangle": "0.0.0",
    "beefy": "^1.1.0",
    "gl-context": "^0.1.0",
    "glslify": "^1.3.0"
  },
  "directories": {
    "test": "test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/glslify-live.git"
  },
  "keywords": [
    "glsl",
    "live",
    "reload",
    "update",
    "webgl",
    "shader",
    "fragment",
    "vertex",
    "refresh",
    "browserify-transform"
  ],
  "bugs": {
    "url": "https://github.com/hughsk/glslify-live/issues"
  },
  "homepage": "https://github.com/hughsk/glslify-live",
  "readme": "# glslify-live [![experimental](http://badges.github.io/stability-badges/dist/experimental.svg)](http://github.com/badges/stability-badges)\n\nA [browserify](http://browserify.org/) transform that transparently enables\nlive reloading of your shaders when using\n[glslify](http://github.com/chrisdickinson/glslify).\n\n## Usage\n\n[![NPM](https://nodei.co/npm/glslify-live.png)](https://nodei.co/npm/glslify-live/)\n\nAfter installing `glslify-live`, run this from your project root to start up\nthe live reloading server:\n\n``` bash\nnpm start glslify-live\n```\n\nProvided that's running, you can simply include the `glslify-live` transform\n*before* `glslify` when you're bundling with browserify. In the commandline:\n\n``` bash\nbrowserify -t glslify-live -t glslify\n```\n\nOr through browserify's JavaScript API:\n\n``` javascript\nvar browserify = require('browserify')\nvar fs = require('fs')\n\nvar output = fs.createWriteStream('bundle.js')\nvar br = browserify('client.js')\n\nbr.transform('glslify-live')\nbr.transform('glslify')\n\nbr.bundle().pipe(output)\n```\n\n### Detecting File Changes\n\nYou might want to respond to these automatic updates, especially considering\nthat they may result in changing the values of your uniform/attribute variables.\n\nIn that case, you can simply require this module in your code and list to\nthe update event:\n\n``` javascript\nvar live = require('glslify-live')\n\nlive.on('update', function(filename, shaderInstance) {\n  // do things here\n})\n```\n\nIf you're not applying the transform, all that you're loading up is an\nempty `EventEmitter` so it shouldn't be an issue including it in your\ncode. Enjoy!\n\n## License\n\nMIT. See [LICENSE.md](http://github.com/hughsk/glslify-live/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "glslify-live@2.0.3",
  "_from": "glslify-live@^2.0.3"
}
